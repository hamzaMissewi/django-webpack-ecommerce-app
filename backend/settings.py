"""
Django settings for greatecommerce project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# import environ
# env = environ.Env()
# environ.Env.read_env()  # Reads the .env file

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xet#3d6wr-riv5g)v&u3)w2@+y4q!cz8&(t!o&#i7=-(#(7!4e'

# HAMZA

# SECRET_KEY = env('SECRET_KEY')
# SECRET_KEY = env('SECRET_KEY', default='your-default-secret-key')
# heroku config:set SECRET_KEY='your-secret-key'
# heroku config:set DATABASE_NAME='your-database-name'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

# python manage.py startapp hamzaApp
# pip install django-cors-headers => pip show django-cors-headers


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # edited
    'store',
    'authApp',
    'carts',
    'orders',
    'media',
    'userProjects',
    'middleware.globalContextMiddleware',
    'corsheaders',
    'graphene_django',
    "admin_honeypot",
    'rest_framework',  # If you're using Django REST Framework
]

# HAMZA
GRAPHENE = {
    'SCHEMA': 'greatecommerce.schema'  # Adjust this to point to your schema
}
# HAMZA
LOGIN_URL = 'login'  # Redirect here if not authenticated
LOGIN_REDIRECT_URL = 'home'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # for react app
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware'
]

ROOT_URLCONF = 'greatecommerce.urls'

# Configure CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins (not recommended for production)

# Or, to allow specific origins, use:
# CORS_ALLOWED_ORIGINS = [
#     #     "http://127.0.0.1:3000",
#     "http://localhost:3000",  # React app URL
#     "http://localhost:3069",
# ]

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS"
]

# Optional settings
CORS_ALLOW_CREDENTIALS = True  # Allow cookies to be sent with cross-origin requests

# CORS_ALLOW_HEADERS = [
#     "content-type",
#     "authorization",
# ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #
                # 'your_app.context_processors.global_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'greatecommerce.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        # HAMZA CODE ENVIRONMENT
        # 'NAME': env('DATABASE_NAME'), 
        # 'USER': env('DATABASE_USER'),
        # 'PASSWORD': env('DATABASE_PASS'),
    },
    #     postgresql
    # pip install psycopg2-binary
    'default:postgreSql': {
        'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': env('DATABASE_NAME'),  # 'your_db_name',
        'USER': 'your_db_user',
        'PASSWORD': 'your_db_password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    # MySql
    # pip install mysqlclient
    'default:mysql': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'your_db_name',
        'USER': 'your_db_user',
        'PASSWORD': 'your_db_password',
        'HOST': 'localhost',
        'PORT': '3306',
    },
    # ORACLE
    # Configuration: You need to install the cx_Oracle package.
    # pip install cx_Oracle
    'default:oracle': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': 'your_db_name',
        'USER': 'your_db_user',
        'PASSWORD': 'your_db_password',
        'HOST': 'localhost',
        'PORT': '1521',
    },
    # Microsoft SQL Server
    # pip install django-pyodbc-azure
    'default:sql_server': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': 'your_db_name',
        'USER': 'your_db_user',
        'PASSWORD': 'your_db_password',
        'HOST': 'localhost',
        'PORT': '1433',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
        },
    },
    # Cockroachdb: A distributed SQL database that is compatible with PostgreSQL.

}

# default sqlite3

# PostgreSQL
# Description: A powerful, open-source object-relational database system. It supports advanced features like JSONB and full-text search.
# Configuration: You need to install the psycopg2 package.


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # or prefered directory
# then npm run build

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
